{"version":3,"sources":["../src/app.js"],"names":["app","PORT","process","env","URL","DATABASE_URL","console","log","mongoose","connect","set","use","bodyParser","json","urlencoded","extended","req","res","next","headers","authorization","split","jsonwebtoken","verify","err","decode","user","undefined","limiter","RateLimit","windowMs","max","delayMs","express","static","router","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA;AACA,IAAMA,MAAM,wBAAZ;;AAEA;AACA;;AAEA,IAAMC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,MAAMF,QAAQC,GAAR,CAAYE,YAAZ,IAA4B,0CAAxC;AACAC,QAAQC,GAAR,CAAYL,QAAQC,GAAR,CAAYE,YAAxB;;AAEAG,mBAASC,OAAT,CAAiBL,GAAjB,EAAsB,YAAM;AAC1BE,UAAQC,GAAR;AACD,CAFD;;AAIA;AACA;;AAEA;AACAP,IAAIU,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACAV,IAAIW,GAAJ,CAAQ,uBAAR;;AAEA;AACAX,IAAIW,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAb,IAAIW,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEA;AACAf,IAAIW,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAIF,IAAIG,OAAJ,IAAeH,IAAIG,OAAJ,CAAYC,aAA3B,IAA4CJ,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,KAA5F,EAAmG;AAC/FC,2BAAaC,MAAb,CAAoBP,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAApB,EAA6D,eAA7D,EAA8E,UAACG,GAAD,EAAMC,MAAN,EAAiB;AAC3F,UAAGD,GAAH,EAAQR,IAAIU,IAAJ,GAAWC,SAAX;AACRX,UAAIU,IAAJ,GAAWD,MAAX;AACAP;AACH,KAJD;AAKH,GAND,MAMO;AACHF,QAAIU,IAAJ,GAAWC,SAAX;AACAT;AACH;AACF,CAXD;;AAaA;AACA,IAAMU,UAAU,IAAIC,0BAAJ,CAAc;AAC5BC,YAAU,KAAK,EAAL,GAAU,IADQ;AAE5BC,OAAK,GAFuB;AAG5BC,WAAS;AAHmB,CAAd,CAAhB;;AAMA;AACAhC,IAAIW,GAAJ,CAAQ,sBAAO,MAAP,CAAR;;AAEA;AACAX,IAAIW,GAAJ,CAAQsB,kBAAQC,MAAR,CAAe,QAAf,CAAR;;AAEA;AACAlC,IAAIW,GAAJ,CAAQwB,sBAAR;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEAnC,IAAIoC,MAAJ,CAAWnC,IAAX,EAAiB,YAAM;AACrBK,UAAQC,GAAR,kCAA2CN,IAA3C;AACD,CAFD","file":"app.js","sourcesContent":["import express from 'express';\nimport mongoose, { Collection } from 'mongoose';\nimport bodyParser from 'body-parser';\nimport jsonwebtoken from 'jsonwebtoken';\nimport User from './models/userModel';\nimport RateLimit from 'express-rate-limit';\nimport morgan from 'morgan';\nimport helmet from 'helmet';\nimport router from './routes/recordRoutes';\n\n\n// express server\nconst app = express();\n\n// CONNECT DB\n// =================================================================\n\nconst PORT = process.env.PORT || 4000;\nconst URL = process.env.DATABASE_URL || 'mongod://localhost/record-stack-overflow'\nconsole.log(process.env.DATABASE_URL);\n\nmongoose.connect(URL, () => {\n  console.log(`The database is connected!`);\n});\n\n// MIDDLEWARE\n// =================================================================\n\n// EJS\napp.set('view engine', 'ejs');\n\n// helmet setup\napp.use(helmet());\n\n// body parser\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }))\n\n// JWT setup\napp.use((req, res, next) => {\n  if (req.headers && req.headers.authorization && req.headers.authorization.split(' ')[0] === 'JWT') {\n      jsonwebtoken.verify(req.headers.authorization.split(' ')[1], 'BLUESBREAKERs', (err, decode) => {\n          if(err) req.user = undefined;\n          req.user = decode;\n          next();\n      });\n  } else {\n      req.user = undefined;\n      next();\n  }\n});\n\n// rate limit setup\nconst limiter = new RateLimit({\n  windowMs: 15 * 60 * 1000,\n  max: 100,\n  delayMs: 0\n});\n\n// morgan setup\napp.use(morgan('tiny'))\n\n// serve static files\napp.use(express.static('public'));\n\n// router\napp.use(router)\n\n// middleware route\n\n// TEST ROUTE =======================================\n\n// app.get('/params', (req, res) => {\n//   res.json({ message : 'Hello World!', fullName: req.query})\n//   console.log(JSON.stringify(req.query));\n  \n// });\n\n// Server ===========================================\n\napp.listen(PORT, () => {\n  console.log(`Server is listening on port ${PORT}`);\n});"]}