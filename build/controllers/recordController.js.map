{"version":3,"sources":["../../src/controllers/recordController.js"],"names":["Record","mongoose","model","RecordSchema","createRecord","req","res","record","body","save","err","data","status","send","message","json","getAllRecords","find","updateRecordById","id","_id","params","record_id","updatedInfo","findOneAndUpdate","new","contact","deleteRecord","remove","getRecordsByArtist","artist","recordsByLocation","location","getRecordsByArtistAndLocation","getByGenre","genre","getGenreAndLocation"],"mappings":"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","file":"recordController.js","sourcesContent":["import mongoose from 'mongoose';\nimport { RecordSchema } from '../models/recordModel';\n\n\n// require model\nconst Record = mongoose.model('Record', RecordSchema);\n// const Record = require('./src/models/recordModel')\n\n\n\nexport const createRecord = (req, res) => {\n  let record = new Record(req.body);\n  record.save((err, data) => {\n    if (err) {\n      return res.status(400).send({\n        message: err\n      });\n    } else {\n      return res.json({message: 'Success - record created!', 'New Record Information': data});\n    }\n  });\n};\n\nexport const getAllRecords = (req, res) => {\n  Record.find((err, data) => {\n    if (err) {\n      res.send(err) \n    } else {\n      res.json(data)\n    }\n  });\n};\n\nexport const updateRecordById = (req, res) => {\n  const id = {_id: req.params.record_id};\n  const updatedInfo = req.body;\n  Record.findOneAndUpdate(id, updatedInfo, { new: true }, (err, contact) => {\n    if (err) {\n      res.send(err)\n    } else {\n      res.json(contact)\n    }\n  });\n};\n\nexport const deleteRecord = (req, res) => {\n  Record.remove({_id: req.params.record_id}, (err, data) => {\n    if (err) {\n      res.send(err)\n    } else {\n      res.json({message: 'Successfully deleted!'})\n    }\n  });\n};\n\nexport const getRecordsByArtist = (req, res) => {\n\n  Record.find({artist: req.params.artist}, (err, data) => {\n    if (err) {\n      res.send(err) \n    } else {\n      res.json(data)\n    }\n  });\n}\n\nexport const recordsByLocation = (req, res) => {\n  Record.find({location: req.params.location}, (err, data) => {\n    if (err) {\n      res.send(err) \n    } else {\n      res.json(data)\n    }\n  });\n};\n\nexport const getRecordsByArtistAndLocation = (req, res) => {\n  Record.find({artist: req.params.artist, location: req.params.location}, (err,data) => {\n    if (err) {\n      res.send(err) \n    } else {\n      res.json(data)\n    }\n  });\n}\n\nexport const getByGenre = (req, res) => {\n  Record.find({genre: req.params.genre}, (err, data) => {\n    if (err) {\n      res.send(err) \n    } else {\n      res.json(data)\n    }\n  });\n};\n\nexport const getGenreAndLocation = (req, res) => {\n  Record.find({genre: req.params.genre, location: req.params.location}, (err,data) => {\n    if (err) {\n      res.send(err) \n    } else {\n      res.json(data)\n    }\n  });\n}\n\n\n"]}