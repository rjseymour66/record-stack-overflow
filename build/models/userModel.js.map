{"version":3,"sources":["../../src/models/userModel.js"],"names":["Schema","mongoose","UserSchema","username","type","String","required","email","hashPassword","created_date","Date","default","now","methods","comparePassword","password","bcrypt","compareSync"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,mBAASD,MAAxB;;AAEO,IAAME,kCAAa,IAAIF,MAAJ,CAAW;AACjCG,cAAU;AACNC,cAAMC,MADA;AAENC,kBAAU;AAFJ,KADuB;AAKjCC,WAAO;AACHH,cAAMC,MADH;AAEHC,kBAAU;AAFP,KAL0B;AASjCE,kBAAc;AACVJ,cAAMC,MADI;AAEVC,kBAAU;AAFA,KATmB;AAajCG,kBAAc;AACXL,cAAMM,IADK;AAEXC,iBAASD,KAAKE;AAFH;AAbmB,CAAX,CAAnB;;AAmBPV,WAAWW,OAAX,CAAmBC,eAAnB,GAAqC,UAACC,QAAD,EAAWP,YAAX,EAA4B;AAC/D,WAAOQ,iBAAOC,WAAP,CAAmBF,QAAnB,EAA6BP,YAA7B,CAAP;AACD,CAFD","file":"userModel.js","sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\nconst Schema = mongoose.Schema;\n\nexport const UserSchema = new Schema({\n    username: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        required: true\n    },\n    hashPassword: {\n        type: String,\n        required: true\n    },\n    created_date: {\n       type: Date,\n       default: Date.now \n    }\n});\n\nUserSchema.methods.comparePassword = (password, hashPassword) => {\n  return bcrypt.compareSync(password, hashPassword)\n};"]}